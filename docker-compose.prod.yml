version: '3.8'

services:
  backend-db:
    image: postgres:17
    container_name: backend-db
    hostname: backend-db
    ports:
      - ${BACKEND_DB_HOST_PORT}:${BACKEND_DB_CONTAINER_PORT}
    environment:
      POSTGRES_USER: ${BACKEND_DB_USERNAME}
      POSTGRES_PASSWORD: ${BACKEND_DB_PASSWORD}
      POSTGRES_DB: ${BACKEND_DB_NAME}
    volumes:
      - ./data/backend-db:/var/lib/postgresql/data
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:26.1
    container_name: keycloak
    command: start --import-realm --http-enabled=true
    environment:
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      KC_DB: postgres
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: ${KC_DB_NAME}
      KC_HOSTNAME: ${KC_HOST_NAME}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_PROXY: edge
      KC_PROXY_HEADERS: xforwarded
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_ADMIN_PASSWORD}
    ports:
      - "8080"
    volumes:
      - ./docker/keycloak/realms/:/opt/keycloak/data/import/
      - ./docker/keycloak/providers/:/opt/keycloak/providers/
    depends_on:
      - keycloak-db
    restart: unless-stopped

  keycloak-db:
    image: postgres:17
    container_name: keycloak-db
    hostname: keycloak-db
    ports:
      - ${KEYCLOAK_DB_HOST_PORT}:${KEYCLOAK_DB_CONTAINER_PORT}
    environment:
      POSTGRES_USER: ${KC_DB_USERNAME}
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD}
      POSTGRES_DB: ${KC_DB_NAME}
    volumes:
      - ./data/keycloak-db:/var/lib/postgresql/data
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - ${RABBITMQ_HOST_PORT}:${RABBITMQ_CONTAINER_PORT}
      - ${RABBITMQ_MANAGEMENT_HOST_PORT}:${RABBITMQ_MANAGEMENT_CONTAINER_PORT}
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
    restart: unless-stopped

  admin-api:
    image: flashvagas/flashvagas:admin-api
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    env_file:
      - ./admin-api/.env.prod
    depends_on:
      - backend-db
      - rabbitmq
      - keycloak
    restart: unless-stopped

  flashvagas-api:
    image: flashvagas/flashvagas:flashvagas-api
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    env_file:
      - ./flashvagas-api/.env.prod
    depends_on:
      - backend-db
      - rabbitmq
    restart: unless-stopped

  gateway-api:
    image: flashvagas/flashvagas:gateway-api
    ports:
      - "9000:9000"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    env_file:
      - ./gateway-api/.env.prod
    depends_on:
      - flashvagas-api
      - admin-api
    restart: unless-stopped
    
  frontend:
    image: flashvagas/flashvagas:frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    depends_on:
      - gateway-api
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - keycloak

networks:
  default:
    name: flashvagas